// Code generated by protoc-gen-go. DO NOT EDIT.
// source: austin.proto

package austin

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendRequest struct {
	Code                 string        `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	MessageTemplateId    int64         `protobuf:"varint,2,opt,name=MessageTemplateId,proto3" json:"MessageTemplateId,omitempty"`
	MessageParam         *MessageParam `protobuf:"bytes,3,opt,name=MessageParam,proto3" json:"MessageParam,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f99efda482580, []int{0}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *SendRequest) GetMessageTemplateId() int64 {
	if m != nil {
		return m.MessageTemplateId
	}
	return 0
}

func (m *SendRequest) GetMessageParam() *MessageParam {
	if m != nil {
		return m.MessageParam
	}
	return nil
}

type MessageParam struct {
	Receiver             string            `protobuf:"bytes,1,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Variables            map[string]string `protobuf:"bytes,2,rep,name=Variables,proto3" json:"Variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Extra                map[string]string `protobuf:"bytes,3,rep,name=Extra,proto3" json:"Extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MessageParam) Reset()         { *m = MessageParam{} }
func (m *MessageParam) String() string { return proto.CompactTextString(m) }
func (*MessageParam) ProtoMessage()    {}
func (*MessageParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f99efda482580, []int{1}
}

func (m *MessageParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageParam.Unmarshal(m, b)
}
func (m *MessageParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageParam.Marshal(b, m, deterministic)
}
func (m *MessageParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageParam.Merge(m, src)
}
func (m *MessageParam) XXX_Size() int {
	return xxx_messageInfo_MessageParam.Size(m)
}
func (m *MessageParam) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageParam.DiscardUnknown(m)
}

var xxx_messageInfo_MessageParam proto.InternalMessageInfo

func (m *MessageParam) GetReceiver() string {
	if m != nil {
		return m.Receiver
	}
	return ""
}

func (m *MessageParam) GetVariables() map[string]string {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *MessageParam) GetExtra() map[string]string {
	if m != nil {
		return m.Extra
	}
	return nil
}

type SendResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResponse) Reset()         { *m = SendResponse{} }
func (m *SendResponse) String() string { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()    {}
func (*SendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_126f99efda482580, []int{2}
}

func (m *SendResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResponse.Unmarshal(m, b)
}
func (m *SendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResponse.Marshal(b, m, deterministic)
}
func (m *SendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResponse.Merge(m, src)
}
func (m *SendResponse) XXX_Size() int {
	return xxx_messageInfo_SendResponse.Size(m)
}
func (m *SendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendResponse proto.InternalMessageInfo

func (m *SendResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*SendRequest)(nil), "austin.SendRequest")
	proto.RegisterType((*MessageParam)(nil), "austin.MessageParam")
	proto.RegisterMapType((map[string]string)(nil), "austin.MessageParam.ExtraEntry")
	proto.RegisterMapType((map[string]string)(nil), "austin.MessageParam.VariablesEntry")
	proto.RegisterType((*SendResponse)(nil), "austin.SendResponse")
}

func init() { proto.RegisterFile("austin.proto", fileDescriptor_126f99efda482580) }

var fileDescriptor_126f99efda482580 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0xd9, 0xa4, 0x2d, 0x76, 0x5a, 0x44, 0xc7, 0x1e, 0x42, 0x2e, 0x86, 0x78, 0xc9, 0x41,
	0x0a, 0x46, 0x84, 0xa0, 0x5e, 0x8a, 0xf4, 0xe0, 0x41, 0x90, 0x55, 0xbc, 0x6f, 0xcd, 0x20, 0xc1,
	0x34, 0x89, 0xbb, 0x9b, 0x62, 0x1f, 0xc1, 0x77, 0xf0, 0x61, 0xa5, 0xbb, 0xb1, 0x6d, 0x30, 0x17,
	0x6f, 0xf3, 0xf1, 0xff, 0xcd, 0xc7, 0xce, 0xc2, 0x58, 0xd4, 0x4a, 0x67, 0xc5, 0xb4, 0x92, 0xa5,
	0x2e, 0x71, 0x60, 0xbd, 0xf0, 0x8b, 0xc1, 0xe8, 0x89, 0x8a, 0x94, 0xd3, 0x47, 0x4d, 0x4a, 0x23,
	0x42, 0xef, 0xae, 0x4c, 0xc9, 0x63, 0x01, 0x8b, 0x86, 0xdc, 0xd8, 0x78, 0x0e, 0xc7, 0x0f, 0xa4,
	0x94, 0x78, 0xa3, 0x67, 0x5a, 0x56, 0xb9, 0xd0, 0x74, 0x9f, 0x7a, 0x4e, 0xc0, 0x22, 0x97, 0xff,
	0x4d, 0x60, 0x02, 0xe3, 0x26, 0xf8, 0x28, 0xa4, 0x58, 0x7a, 0x6e, 0xc0, 0xa2, 0x51, 0x3c, 0x99,
	0x36, 0xed, 0xf7, 0x73, 0xbc, 0xa5, 0x0c, 0xbf, 0x9d, 0x36, 0x8a, 0x3e, 0x1c, 0x70, 0x7a, 0xa5,
	0x6c, 0x45, 0xb2, 0x19, 0x68, 0xeb, 0xe3, 0x0c, 0x86, 0x2f, 0x42, 0x66, 0x62, 0x91, 0x93, 0xf2,
	0x9c, 0xc0, 0x8d, 0x46, 0xf1, 0x59, 0x57, 0x8f, 0xe9, 0x56, 0x35, 0x2f, 0xb4, 0x5c, 0xf3, 0x1d,
	0x85, 0x57, 0xd0, 0x9f, 0x7f, 0x6a, 0x29, 0x3c, 0xd7, 0xe0, 0xa7, 0x9d, 0xb8, 0x51, 0x58, 0xd4,
	0xaa, 0xfd, 0x5b, 0x38, 0x6c, 0xd7, 0xc4, 0x23, 0x70, 0xdf, 0x69, 0xdd, 0x8c, 0xb8, 0x31, 0x71,
	0x02, 0xfd, 0x95, 0xc8, 0x6b, 0x32, 0xcf, 0x34, 0xe4, 0xd6, 0xb9, 0x76, 0x12, 0xe6, 0x27, 0x00,
	0xbb, 0x92, 0xff, 0x21, 0xc3, 0x10, 0xc6, 0xf6, 0x52, 0xaa, 0x2a, 0x0b, 0x45, 0x5d, 0xa7, 0x8a,
	0x6f, 0x60, 0x30, 0x33, 0x4b, 0xe0, 0x05, 0xf4, 0x36, 0x6a, 0x3c, 0xf9, 0xdd, 0x6a, 0xef, 0xca,
	0xfe, 0xa4, 0x1d, 0xb4, 0x05, 0x17, 0x03, 0xf3, 0x35, 0x2e, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x81, 0x5d, 0xae, 0x26, 0x2a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AustinClient is the client API for Austin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AustinClient interface {
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
}

type austinClient struct {
	cc *grpc.ClientConn
}

func NewAustinClient(cc *grpc.ClientConn) AustinClient {
	return &austinClient{cc}
}

func (c *austinClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	out := new(SendResponse)
	err := c.cc.Invoke(ctx, "/austin.Austin/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AustinServer is the server API for Austin service.
type AustinServer interface {
	Send(context.Context, *SendRequest) (*SendResponse, error)
}

// UnimplementedAustinServer can be embedded to have forward compatible implementations.
type UnimplementedAustinServer struct {
}

func (*UnimplementedAustinServer) Send(ctx context.Context, req *SendRequest) (*SendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterAustinServer(s *grpc.Server, srv AustinServer) {
	s.RegisterService(&_Austin_serviceDesc, srv)
}

func _Austin_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AustinServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/austin.Austin/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AustinServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Austin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "austin.Austin",
	HandlerType: (*AustinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _Austin_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "austin.proto",
}
