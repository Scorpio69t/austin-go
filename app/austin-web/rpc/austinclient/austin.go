// Code generated by goctl. DO NOT EDIT!
// Source: austin.proto

package austinclient

import (
	"context"

	"austin-go/app/austin-web/rpc/austin"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MessageParam = austin.MessageParam
	SendRequest  = austin.SendRequest
	SendResponse = austin.SendResponse

	Austin interface {
		Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error)
	}

	defaultAustin struct {
		cli zrpc.Client
	}
)

func NewAustin(cli zrpc.Client) Austin {
	return &defaultAustin{
		cli: cli,
	}
}

func (m *defaultAustin) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*SendResponse, error) {
	client := austin.NewAustinClient(m.cli.Conn())
	return client.Send(ctx, in, opts...)
}
